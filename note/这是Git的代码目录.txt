git init		-------------(将文件夹变成一个仓库)
git status		-------------(查看文件夹状态（红色在编辑区）（绿色在暂存区）（）)
git add .		-------------(将所有文件放到暂存区)
git commit -m "备注"------------(将文件放到分支并标明备注)
git remote add origin https://github.com/2650181298/planFolder.git-------（输入账号密码）
git push -u origin master--------（提交）
git pull origin master--------------把github上的文件重新拉下来
dir		------------ 查看目录下的文件
git rm -r --cached image--------删除磁盘上的image文件
git clone *****		-----url地址可以下载地址上的东西此时两者保持同步
git push -f origin master---------最牛逼的强推代码直接覆盖git所有文档
git pull --rebase origin master-----------拉取远程的文件把本地的覆盖，再上传


git branch -a(查看所有分支包括本地分支和远程分支).
git branch -r(查看远程分支).

git checkout -b branchname(直接新建一个分支然后切换至新创建的分支).就是创建加切换分支.
等价于命令：git branch （你的新分支名字）：创建一个分支+git checkout （分支的名字）：切换到分支.
 git push origin （你分支的名字）将新分支推送至GitHub.


将分支代码feature-v3同步到master上
git checkout feature-v3
git add .
git commit -m "..."
git checkout master
git merge feature-v3
// 处理冲突 git add & git commit
git push




git config --global user.name ""  			GitHud 名字
git config --global user.email ""               		邮箱
在命令行或终端中使用下面的命令可以设置git自己的名字和电子邮件。
这是因为Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。